apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-app
  labels:
    app: fastapi-app
spec:
  replicas: 1  # Start with just 1 replica for easier debugging
  selector:
    matchLabels:
      app: fastapi-app
  template:
    metadata:
      labels:
        app: fastapi-app
    spec:
      containers:
      - name: fastapi-container
        image: fastapi-app:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        env:
        - name: ENV
          value: "production"
        - name: DEBUG
          value: "true"
        - name: PORT
          value: "8000"
        - name: HOST
          value: "0.0.0.0"
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "250m"
            memory: "512Mi"
        # Simplified probes for debugging
        livenessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 60  # Give more time to start
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        # Add command to debug startup issues
        command: ["/bin/sh"]
        args: ["-c", "echo 'Starting FastAPI app...' && uvicorn main:app --host 0.0.0.0 --port 8000"]
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
spec:
  selector:
    app: fastapi-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: ClusterIP  
---
# Simple NodePort service for easy testing
apiVersion: v1
kind: Service
metadata:
  name: fastapi-nodeport
spec:
  selector:
    app: fastapi-app
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      nodePort: 30001
  type: NodePort
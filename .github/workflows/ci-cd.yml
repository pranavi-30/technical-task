name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest httpx
    
    - name: Run tests
      run: |
        python -m pytest tests.py -v
    
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t fastapi-app:latest .
        docker images
    
    - name: Start Minikube
      uses: medyagh/setup-minikube@master
      with:
        kubernetes-version: v1.28.3
        minikube-version: 1.31.2
        driver: docker
    
    - name: Deploy to Minikube
      run: |
        # Load the Docker image into Minikube
        minikube image load fastapi-app:latest
        
        # Verify image is loaded
        minikube image ls | grep fastapi-app
        
        # Apply Kubernetes manifests
        kubectl apply -f k8s-deployment.yaml
        
        # Wait for deployment to be ready
        kubectl rollout status deployment/fastapi-app --timeout=300s
        
        # Check deployment status
        kubectl get pods
        kubectl get services
    
    - name: Test deployment
      run: |
        # Create a test service with NodePort for easier access
        kubectl expose deployment fastapi-app --type=NodePort --port=8000 --name=test-service || true
        
        # Get Minikube IP and NodePort
        MINIKUBE_IP=$(minikube ip)
        NODE_PORT=$(kubectl get svc test-service -o jsonpath='{.spec.ports[0].nodePort}')
        
        echo "Testing API at http://$MINIKUBE_IP:$NODE_PORT"
        
        # Wait for service to be ready
        sleep 10
        
        # Test the endpoints
        curl -f http://$MINIKUBE_IP:$NODE_PORT/ || exit 1
        curl -f http://$MINIKUBE_IP:$NODE_PORT/health || exit 1
        
        echo "API tests passed successfully!"